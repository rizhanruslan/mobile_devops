name: Dart and Flutter CI with Caching and Artifacts

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y wget unzip xz-utils git

      - name: Verify git installation
        run: git --version

      - name: Debug environment variables
        run: printenv

      - name: Debug PATH
        run: echo $PATH

      - name: Restore cached Flutter SDK
        id: cache-flutter-restore
        uses: actions/cache@v4
        with:
          path: ~/.flutter
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}

      - name: Set up Flutter
        if: steps.cache-flutter-restore.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/flutter/flutter.git -b stable --depth 1
          echo "$PWD/flutter/bin" >> $GITHUB_PATH
          echo "$PWD/flutter/bin" >> $HOME/.bashrc
          source $HOME/.bashrc
          flutter/bin/flutter doctor
        env:
          PATH: ${{ github.workspace }}/flutter/bin:${{ env.PATH }}

      - name: Add Flutter to PATH
        run: echo "$PWD/flutter/bin" >> $GITHUB_PATH

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Verify formatting
        continue-on-error: true
        run: flutter format --output=none --set-exit-if-changed .

      # Uncomment these steps if you have analysis or tests
      # - name: Analyze project source
      #   run: flutter analyze

      # - name: Run tests
      #   run: flutter test

      - name: Build APK
        run: flutter build apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Save Flutter cache
        id: cache-flutter-save
        uses: actions/cache@v4
        with:
          path: ~/.flutter
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}

  download-artifact:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Display structure of downloaded files
        run: ls -R build/app/outputs/flutter-apk/app-release.apk
